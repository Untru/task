
&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	#Если ВебКлиент Тогда
		ДопПараметры = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ПрисоединитьФайлыФормаФайлов", ЭтаФорма,ДопПараметры);
		
		ОбщийМодульКлиент.ПроверитьПодключениеРасширения(Оповещение);
	#Иначе  
		ПрисоединитьФайлыВыполнить();
	#КонецЕсли

 КонецПроцедуры

&НаКлиенте
Процедура ПрисоединитьФайлыФормаФайлов(Действия,ДопПараметры) Экспорт
	 ПрисоединитьФайлыВыполнить();
КонецПроцедуры	

&НаКлиенте
 Процедура ПрисоединитьФайлыВыполнить()
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	//Фильтр = НСтр("ru = 'Текст'; en = 'Text'")
	//    + "(*.txt)|*.txt";
	//ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("СписокПередНачаломДобавленияЗавершение", ЭтотОбъект, Новый Структура("ДиалогОткрытияФайла", ДиалогОткрытияФайла)));
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавленияЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;
        
    Если (ВыбранныеФайлы <> Неопределено) Тогда
        МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		АдресВрХранилища = ПоместитьВоВременноеХранилище(МассивФайлов);
		
		МассивФайловХранилища =  ПолучитьИзВременногоХранилища(АдресВрХранилища);
        Для Каждого ИмяФайла Из МассивФайловХранилища Цикл
            ОбщийМодульСервер.ДобавитьПрисоединенныйФайл(ИмяФайла,ВладелецФайла);
        КонецЦикла;
    КонецЕсли;
    
    Элементы.Список.Обновить();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка);
	ВладелецФайла = Параметры.ВладелецФайла;
	
	// Установим отбор
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВладелецФайла"); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = ВладелецФайла;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	
	#Если ВебКлиент Тогда
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ТекущаяСтрока",Элемент.ТекущаяСтрока);
		Оповещение = Новый ОписаниеОповещения("ПросмотретьФайлФормаФайлов", ЭтаФорма,ДопПараметры);
		
		ОбщийМодульКлиент.ПроверитьПодключениеРасширения(Оповещение);
	#Иначе  
		ОткрытьФайлВыполнить(Элемент.ТекущаяСтрока);
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьФайлФормаФайлов(Действия,ДопПараметры) Экспорт
	 ОткрытьФайлВыполнить(ДопПараметры.ТекущаяСтрока);
 КонецПроцедуры
 
&НаКлиенте
Процедура ОткрытьФайлВыполнить(ТекущаяСтрока)
	ВозвращаемыйФайл = ВернутьФайлНаСервере(ТекущаяСтрока);
	
	Если НЕ ВозвращаемыйФайл = "" Тогда
		НачатьЗапускПриложения(Новый ОписаниеОповещения("СписокПередНачаломИзмененияЗавершение", ЭтотОбъект), ВозвращаемыйФайл);
	Иначе
		Сообщить("Не возможно прочитать файл.");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзмененияЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
    
  

КонецПроцедуры

&НаСервере
Функция ВернутьФайлНаСервере(Элемент)
		
	ИмяВременногоФайла= "";
	
	ЗаписьФайла = РегистрыСведений.ПрисоединенныеФайлы.СоздатьМенеджерЗаписи();
	ЗаписьФайла.ИмяФайла = Элемент.ИмяФайла;
	ЗаписьФайла.Период = Элемент.Период;
	ЗаписьФайла.ВладелецФайла = Элемент.ВладелецФайла;
	ЗаписьФайла.Прочитать();
	Если ЗаписьФайла.Выбран() Тогда
		ИмяВременногоФайла = КаталогВременныхФайлов()+ЗаписьФайла.ИмяФайла;
		Если ТипЗнч(ЗаписьФайла.ХранимыйФайл) <> Тип("ДвоичныеДанные") Тогда
			ДвоичныеДанные = ЗаписьФайла.ХранимыйФайл.Получить();
		Иначе
			ДвоичныеДанные = ЗаписьФайла.ХранимыйФайл;
		КонецЕсли; 
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
	КонецЕсли; 

	Возврат ИмяВременногоФайла;
КонецФункции

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	ВремяУдаленияВМинутах = ОбщийМодульСервер.ПолучитьКонстантыВремениУдаленияЗаписей("ВремяУдаленияЗаписиФайла");
	Если НЕ ВремяУдаленияВМинутах=0 Тогда 
		Если (Элемент.ТекущиеДанные.Период+ВремяУдаленияВМинутах*60) < ТекущаяДата() Тогда
			Отказ = Истина;
			Сообщить("Нельзя удалять присоединенный файл добавленный более "+ ВремяУдаленияВМинутах +" минут назад");
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры



